&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РекомендацииПоСтудентам") Тогда
		
		// Проверяем академическую задолженность на ликвидацию

		РекомендацияПоСтудентам = ДанныеЗаполнения.ПолучитьОбъект(); 
		
		 Если ЗначениеЗаполнено(РекомендацияПоСтудентам.Рекомендация) И 
           РекомендацияПоСтудентам.Рекомендация = Перечисления.РешениеКомиссии.ЗадолженностьЛиквидирована Тогда
            ВызватьИсключение "Студент ликвидировал академическую задолженность!";
        КонецЕсли;		
		
		
		// Проверяем тип документа-основания
		Если РекомендацияПоСтудентам.ДокументОснование.Метаданные().Имя = "ВедомостьУчетаАкадемическихЗадолженностейДляСтудентовсИОМ" Тогда
		    ВызватьИсключение "Невозможно создать заявление на продление для студента с ИОМ - это уже вторая попытка!»";
		КонецЕсли;

        Группа = ДанныеЗаполнения.Группа;
        Дисциплина = ДанныеЗаполнения.Дисциплина;
        ПричинаПродления = ДанныеЗаполнения.Ссылка;
        Студент = ДанныеЗаполнения.Студент;  
        
        // Получаем данные о форме контроля по дисциплине
        Если Дисциплина <> Неопределено Тогда
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ ПЕРВЫЕ 1
            |    Дисциплины.ФормаКонтроля КАК ФормаКонтроля
            |ИЗ
            |    Справочник.Дисциплины КАК Дисциплины
            |ГДЕ
            |    Дисциплины.Ссылка = &СсылкаНаДисциплину";
            
            Запрос.УстановитьПараметр("СсылкаНаДисциплину", Дисциплина);
            РезультатЗапроса = Запрос.Выполнить();
            Выборка = РезультатЗапроса.Выбрать();
            
            Если Выборка.Следующий() Тогда
                ЭтотОбъект.ФормаКонтроля = Выборка.ФормаКонтроля;
            Иначе
                ЭтотОбъект.ФормаКонтроля = Неопределено;
            КонецЕсли;
		КонецЕсли;
		
      // Проверка уникальности заявления
        ПроверитьУникальностьЗаявления(ДанныеЗаполнения.Студент, ДанныеЗаполнения.Дисциплина, "", ДанныеЗаполнения.Ссылка);

    КонецЕсли;  
 
КонецПроцедуры 

&НаСервере
Процедура ПроверитьУникальностьЗаявления(Студент, Дисциплина, ИмяСтудента = "", ДокументОснование)
    
    // Получаем имя студента, если передан студент
    Если ЗначениеЗаполнено(Студент) Тогда
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |    Студенты.Наименование КАК Наименование
        |ИЗ
        |    Справочник.Студенты КАК Студенты
        |ГДЕ
        |    Студенты.Ссылка = &СсылкаНаСтудента";
        
        Запрос.УстановитьПараметр("СсылкаНаСтудента", Студент);
        Результат = Запрос.Выполнить();
        Выборка = Результат.Выбрать();
        
        Если Выборка.Следующий() Тогда
            ИмяСтудента = Выборка.Наименование;
        КонецЕсли;
	КонецЕсли;
	
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.Ссылка КАК Ссылка,
    |    ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.Дата КАК Дата,
    |    ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.Номер КАК Номер,
    |    ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.ПричинаПродления КАК ПричинаПродления
    |ИЗ
    |    Документ.ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности КАК ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности
    |ГДЕ
    |    ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.Студент = &Студент
    |    И ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.Дисциплина = &Дисциплина
    |    И ЗаявлениеНаПродлениеСроковЛиквидацииЗадолженности.ПометкаУдаления = ЛОЖЬ";
    
    Запрос.УстановитьПараметр("Студент", Студент);
    Запрос.УстановитьПараметр("Дисциплина", Дисциплина);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();

   Если Выборка.Количество() > 0 Тогда
            ВызватьИсключение ("Для студента «" + Студент +"» уже существует документ «Заявление на продление сроков ликвидации задолженности» по дисциплине «"+Дисциплина+ "»!");
        КонецЕсли;
    
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеСтудента(СсылкаНаСтудента) Экспорт
    
    Результат = Новый Структура;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Группа КАК Группа,
    |    Студенты.Наименование КАК Наименование
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента"; 

    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();    

    Если Выборка.Следующий() Тогда
        Результат.Вставить("НаименованиеСтудента", Выборка.Наименование);
        Результат.Вставить("ГруппаСсылка", Выборка.Группа);
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции     