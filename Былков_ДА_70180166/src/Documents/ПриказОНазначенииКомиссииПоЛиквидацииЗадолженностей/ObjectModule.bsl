&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.НаправлениеНаПересдачу") Тогда
		
        // Проверяем наличие Дисциплины
        Если Не ЗначениеЗаполнено(ДанныеЗаполнения.Дисциплина) Тогда
            ВызватьИсключение "В документе-основании не указана Дисциплина!";
        КонецЕсли; 
		
        // Проверяем наличие Время, Дата проведения, Аудитория
        Если Не ЗначениеЗаполнено(ДанныеЗаполнения.Время) ИЛИ 
           Не ЗначениеЗаполнено(ДанныеЗаполнения.ДатаПроведения) ИЛИ 
           Не ЗначениеЗаполнено(ДанныеЗаполнения.Аудитория) Тогда
            ВызватьИсключение "В документе-основании не указаны необходимые данные!";
        КонецЕсли;
		
        // Проверка уникальности приказа
        ПроверитьУникальностьПриказа(ДанныеЗаполнения.Студент, ДанныеЗаполнения.Дисциплина, ДанныеЗаполнения.Ссылка);
		
        // Заполняем реквизиты из Направления на пересдачу
        ЭтотОбъект.Дисциплина = ДанныеЗаполнения.Дисциплина;
        ЭтотОбъект.Преподаватель = ДанныеЗаполнения.Преподаватель;
        ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
        ЭтотОбъект.Студент = ДанныеЗаполнения.Студент;
        ЭтотОбъект.Факультет = ДанныеЗаполнения.Факультет;  
		
		// Получаем семестр студента
        Если ЗначениеЗаполнено(ДанныеЗаполнения.Студент) Тогда
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ
            |  Студенты.Семестр КАК Семестр
            |ИЗ
            |  Справочник.Студенты КАК Студенты
            |ГДЕ
            |  Студенты.Ссылка = &СсылкаНаСтудента";
            
            Запрос.УстановитьПараметр("СсылкаНаСтудента", ДанныеЗаполнения.Студент);
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                ЭтотОбъект.Семестр = Выборка.Семестр;
            КонецЕсли;
        КонецЕсли;  

        
    ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИндивидуальныйПланЛиквидацииЗадолженностей") Тогда
      	// Проверяем наличие Время, Дата пересдачи, Аудитория
        Если Не ЗначениеЗаполнено(ДанныеЗаполнения.Время) ИЛИ 
           Не ЗначениеЗаполнено(ДанныеЗаполнения.ДатаПересдачи) ИЛИ 
           Не ЗначениеЗаполнено(ДанныеЗаполнения.Аудитория) Тогда
            ВызватьИсключение "В документе-основании не указаны необходимые данные!";
        КонецЕсли;
        
        // Проверка уникальности приказа
        ПроверитьУникальностьПриказа(ДанныеЗаполнения.Студент, ДанныеЗаполнения.Дисциплина, ДанныеЗаполнения.Ссылка);
          
        // Заполняем реквизиты из Индивидуального плана
        ЭтотОбъект.Дисциплина = ДанныеЗаполнения.Дисциплина;
        ЭтотОбъект.Преподаватель = ДанныеЗаполнения.Преподаватель;
        ЭтотОбъект.Студент = ДанныеЗаполнения.Студент;
        ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		// Получаем семестр и факультет студента
        Если ЗначениеЗаполнено(ДанныеЗаполнения.Студент) Тогда
            Запрос = Новый Запрос;
            Запрос.Текст = 
            "ВЫБРАТЬ
            |    Студенты.Семестр КАК Семестр,
            |    Студенты.Факультет КАК Факультет
            |ИЗ
            |    Справочник.Студенты КАК Студенты
            |ГДЕ
            |    Студенты.Ссылка = &СсылкаНаСтудента";
            
            Запрос.УстановитьПараметр("СсылкаНаСтудента", ДанныеЗаполнения.Студент);
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                ЭтотОбъект.Семестр = Выборка.Семестр;
                ЭтотОбъект.Факультет = Выборка.Факультет; 
            КонецЕсли;
        КонецЕсли;

    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ПроверитьУникальностьПриказа(Студент, Дисциплина, ДокументОснование)
    
    Если Не ЗначениеЗаполнено(Студент) ИЛИ Не ЗначениеЗаполнено(Дисциплина) ИЛИ Не ЗначениеЗаполнено(ДокументОснование) Тогда
        Возврат;
    КонецЕсли;
    
    // Получаем имя студента для сообщения об ошибке
    ИмяСтудента = "";
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Наименование КАК Наименование
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", Студент);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        ИмяСтудента = Выборка.Наименование;
    КонецЕсли;
    
    // Проверяем уникальность приказа
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.Ссылка КАК Ссылка,
    |    ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.Дата КАК Дата,
    |    ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.Номер КАК Номер
    |ИЗ
    |    Документ.ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей КАК ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей
    |ГДЕ
    |    ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.Студент = &Студент
    |    И ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.Дисциплина = &Дисциплина
    |    И ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.ДокументОснование = &ДокументОснование
    |    И ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.ПометкаУдаления = ЛОЖЬ";
    
    Запрос.УстановитьПараметр("Студент", Студент);
    Запрос.УстановитьПараметр("Дисциплина", Дисциплина);
    Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();

    Если Выборка.Количество() > 0 Тогда
        ТипОснования = ТипЗнч(ДокументОснование);
        
        Если ТипОснования = Тип("ДокументСсылка.ИндивидуальныйПланЛиквидацииЗадолженностей") Тогда
            ТекстОшибки = "Для студента «" + ИмяСтудента + 
                         "» уже существует приказ по дисциплине «" + Дисциплина + 
                         "» на основании индивидуального плана ликвидации задолженностей!";
        ИначеЕсли ТипОснования = Тип("ДокументСсылка.НаправлениеНаПересдачу") Тогда
            ТекстОшибки = "Для студента «" + ИмяСтудента + 
                         "» уже существует приказ по дисциплине «" + Дисциплина + 
                         "» на основании направления на пересдачу!";
        Иначе
            ТекстОшибки = "Для студента «" + ИмяСтудента + 
                         "» уже существует приказ по дисциплине «" + Дисциплина + "»!";
        КонецЕсли;
        
        ВызватьИсключение ТекстОшибки;
    КонецЕсли;
    
КонецПроцедуры