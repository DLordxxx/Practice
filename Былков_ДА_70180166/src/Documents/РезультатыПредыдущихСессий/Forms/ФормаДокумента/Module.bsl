
&НаКлиенте
Процедура СтудентПриИзменении(Элемент)
    Если ЗначениеЗаполнено(Объект.Студент) Тогда
        ФакультетСтудента = ПолучитьФакультетСтудентаНаСервере(Объект.Студент);
        Объект.Факультет = ФакультетСтудента;
    Иначе
        Объект.Факультет = Неопределено;
    КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ФакультетПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Студент) И ЗначениеЗаполнено(Объект.Факультет) Тогда
        ФакультетСтудента = ПолучитьФакультетСтудентаНаСервере(Объект.Студент);
        Если ФакультетСтудента <> Объект.Факультет Тогда
            ВызватьИсключение("Данные заполняются неправильно!");
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры 

&НаСервере
Функция ПолучитьФакультетСтудентаНаСервере(СсылкаНаСтудента)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Факультет КАК Факультет
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Факультет;
    КонецЕсли;
    
    Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура СоздатьНаОсновании(Команда)
    СоздатьНаОснованииНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьНаОснованииНаСервере()
    
    Если НетАкадемическихЗадолженностей() Тогда
        ВызватьИсключение ("Академические задолженности у студента отсутствуют!");
    КонецЕсли;
КонецПроцедуры
&НаСервере
Функция НетАкадемическихЗадолженностей()
        
    Для Каждого СтрокаТабличнойЧасти Из Объект.ХарактеристикаСтудента Цикл
        Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Оценка) Тогда
            Продолжить;
        КонецЕсли;
        
        Если СтрокаТабличнойЧасти.Оценка = Перечисления.Оценка.Незачет ИЛИ
           СтрокаТабличнойЧасти.Оценка = Перечисления.Оценка.Неудовлетворительно Тогда
            Возврат Ложь;
        КонецЕсли;
    КонецЦикла;
    
    Возврат Истина;
КонецФункции    

&НаСервере
Процедура ПроверкаПроведенияНаСервере(Отказ, ПараметрыПроведения)
        
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Семестр КАК Семестр,
    |    Студенты.Курс КАК Курс
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", Объект.Студент);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();  
	
	Если НетАкадемическихЗадолженностей() Тогда
        Отказ = Истина;
        ВызватьИсключение ("Академические задолженности у студента отсутствуют!");
    КонецЕсли;
              
КонецПроцедуры

