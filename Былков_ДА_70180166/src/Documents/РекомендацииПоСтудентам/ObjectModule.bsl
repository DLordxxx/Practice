&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВедомостьУчетаАкадемическихЗадолженностей") Тогда
		Дисциплина = ДанныеЗаполнения.Дисциплина;
		Студент = ДанныеЗаполнения.Студент;
		ДокументОснование = ДанныеЗаполнения.Ссылка;

               
        // Получаем данные студента (включая группу и курс)
        ДанныеСтудента = ПолучитьДанныеСтудента(ДокументОснование.Студент);
        
        // Устанавливаем группу студента
        Если ДанныеСтудента.Свойство("ГруппаСсылка") Тогда
            ЭтотОбъект.Группа = ДанныеСтудента.ГруппаСсылка;
        КонецЕсли;
                      
        // Получаем форму обучения студента
        Если ДанныеСтудента.Свойство("ФормаОбучения") Тогда
            ЭтотОбъект.ФормаОбучения = ДанныеСтудента.ФормаОбучения;
        КонецЕсли;
        
        // Определяем решение комиссии на основании статуса
        Если ДокументОснование.СтатусАкадемическойЗадолженности = Перечисления.НаименованиеСтатуса.Закрытая Тогда
            ЭтотОбъект.Рекомендация = Перечисления.РешениеКомиссии.ЗадолженностьЛиквидирована;
        ИначеЕсли ДокументОснование.СтатусАкадемическойЗадолженности = Перечисления.НаименованиеСтатуса.Активная Тогда
            ЭтотОбъект.Рекомендация = Перечисления.РешениеКомиссии.РекомендоватьОтчисление;
        КонецЕсли;
        
    ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВедомостьУчетаАкадемическихЗадолженностейДляСтудентовсИОМ") Тогда
		
		Дисциплина = ДанныеЗаполнения.Дисциплина;
		Студент = ДанныеЗаполнения.Студент; 
		ДокументОснование = ДанныеЗаполнения.Ссылка;
        
        // Получаем данные студента (включая группу и курс)
        ДанныеСтудента = ПолучитьДанныеСтудента(ДокументОснование.Студент);
        
        // Устанавливаем группу студента
        Если ДанныеСтудента.Свойство("ГруппаСсылка") Тогда
            ЭтотОбъект.Группа = ДанныеСтудента.ГруппаСсылка;
        КонецЕсли;
                    
        // Получаем форму обучения студента
        Если ДанныеСтудента.Свойство("ФормаОбучения") Тогда
            ЭтотОбъект.ФормаОбучения = ДанныеСтудента.ФормаОбучения;
        КонецЕсли;

        // Определяем решение комиссии на основании статуса
        Если ДокументОснование.СтатусАкадемическойЗадолженности = Перечисления.НаименованиеСтатуса.Закрытая Тогда
            ЭтотОбъект.Рекомендация = Перечисления.РешениеКомиссии.ЗадолженностьЛиквидирована;
        ИначеЕсли ДокументОснование.СтатусАкадемическойЗадолженности = Перечисления.НаименованиеСтатуса.Активная Тогда
            ЭтотОбъект.Рекомендация = Перечисления.РешениеКомиссии.РекомендоватьОтчисление;
        КонецЕсли;
            
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеСтудента(СсылкаНаСтудента) Экспорт
    Результат = Новый Структура;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Родитель КАК РодительСправочника,
    |    Студенты.Родитель.Наименование КАК НаименованиеРодителя,
    |    Студенты.ФормаОбучения КАК ФормаОбучения,
    |    Студенты.Наименование КАК Наименование
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента"; 

    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();    

    Если Выборка.Следующий() Тогда
             
        Если ЗначениеЗаполнено(Выборка.РодительСправочника) Тогда
            // Инициализируем переменную Группа
            Группа = Неопределено;
            
            // Вызываем метод общего модуля
            Группа = ОбщиеПроцедурыДляСправочников.НайтиГруппуПоЧастичномуСовпадению(Выборка.НаименованиеРодителя);
            
            Результат.Вставить("ГруппаСсылка", Группа);
            Результат.Вставить("ГруппаНаименование", Выборка.НаименованиеРодителя);
        КонецЕсли;
        
        Результат.Вставить("НаименованиеСтудента", Выборка.Наименование);
        Результат.Вставить("ФормаОбучения", Выборка.ФормаОбучения);
    КонецЕсли;
    
    Возврат Результат; 
КонецФункции