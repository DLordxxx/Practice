
&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПротоколЗаседанияКомиссии") Тогда 
        
        // Получаем данные из документа-основания
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |    ПротоколЗаседанияКомиссии.КоличествоВозникшихЗадолженностей КАК КоличествоВозникшихЗадолженностей,
        |    ПротоколЗаседанияКомиссии.КоличествоЛиквидированныхЗадолженностей КАК КоличествоЛиквидированныхЗадолженностей,
        |    ПротоколЗаседанияКомиссии.ПроцентЗадолженностей КАК ПроцентЗадолженностей,
        |    ПротоколЗаседанияКомиссии.Группа КАК Группа,
        |    ПротоколЗаседанияКомиссии.Семестр КАК Семестр,
        |    ПротоколЗаседанияКомиссии.Студент КАК Студент
        |ИЗ
        |    Документ.ПротоколЗаседанияКомиссии КАК ПротоколЗаседанияКомиссии
        |ГДЕ
        |    ПротоколЗаседанияКомиссии.Ссылка = &СсылкаНаДокумент";
        
        Запрос.УстановитьПараметр("СсылкаНаДокумент", ДанныеЗаполнения.Ссылка);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
        
        Если Выборка.Следующий() Тогда
            // Заполняем реквизиты документа
            ЭтотОбъект.Группа = Выборка.Группа;
            ЭтотОбъект.Семестр = Выборка.Семестр;
            ЭтотОбъект.Основание = ДанныеЗаполнения.Ссылка;
            ЭтотОбъект.Студент = Выборка.Студент;
            ЭтотОбъект.КоличествоВозникшихЗадолженностей = Выборка.КоличествоВозникшихЗадолженностей;
            
            // Получаем данные студента
            ДанныеСтудента = ПолучитьДанныеСтудента(ЭтотОбъект.Студент);
            
            Если ДанныеСтудента.Свойство("НаправленияПодготовки") Тогда
                ЭтотОбъект.НаправленияПодготовки = ДанныеСтудента.НаправленияПодготовки;
            КонецЕсли;
            
            // Проверяем наличие рекомендации на отчисление
            ЕстьРекомендацияНаОтчисление = ПроверитьРекомендациюНаОтчисление(Выборка.Студент);
            
			 Если Выборка.ПроцентЗадолженностей < 80 Тогда
                // Для обычных случаев проверяем процент
                СтандартнаяОбработка = Ложь;
                ВызватьИсключение "Студент имеет " + Выборка.ПроцентЗадолженностей + 
                                 "% академических задолженностей. Ввод приказа об отчислении " +
                                 "возможен только при 80% и более или при наличии рекомендации комиссии на отчисление.";

				//ИначеЕсли ЕстьРекомендацияНаОтчисление Тогда
				//// Если есть рекомендация на отчисление - пропускаем проверку процента
				//Сообщить("Создается приказ об отчислении на основании рекомендации комиссии, " +
				//         "так как студент неудачно прошел вторую пересдачу. " +
				//         "Процент задолженностей: " + Выборка.ПроцентЗадолженностей + "%");
				//       КонецЕсли;
        
			КонецЕсли;   
			
			КонецЕсли;
    
    СтандартнаяОбработка = Истина; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьРекомендациюНаОтчисление(Студент)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    РекомендацииПоСтудентам.Студент КАК Студент,
    |    РекомендацииПоСтудентам.Рекомендация КАК Рекомендация
    |ИЗ
    |    Документ.РекомендацииПоСтудентам КАК РекомендацииПоСтудентам
    |ГДЕ
    |    РекомендацииПоСтудентам.Студент = &Студент
    |    И РекомендацииПоСтудентам.Рекомендация = &РекомендацияНаОтчисление
    |    И РекомендацииПоСтудентам.Проведен";
    
    Запрос.УстановитьПараметр("Студент", Студент);
    Запрос.УстановитьПараметр("РекомендацияНаОтчисление", Перечисления.РешениеКомиссии.РекомендоватьОтчисление);
    
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Возврат Выборка.Следующий();
КонецФункции

&НаСервере
Функция ПолучитьДанныеСтудента(СсылкаНаСтудента) Экспорт
    Результат = Новый Структура;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.НаправленияПодготовки КАК НаправленияПодготовки,
    |    Студенты.Факультет КАК Факультет,
    |    Студенты.Семестр КАК Семестр,
    |    Студенты.ФормаОбучения КАК ФормаОбучения,
    |    Студенты.Наименование КАК Наименование
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Результат.Вставить("НаправленияПодготовки", Выборка.НаправленияПодготовки);
        Результат.Вставить("Факультет", Выборка.Факультет);
        Результат.Вставить("Семестр", Выборка.Семестр);
        Результат.Вставить("ФормаОбучения", Выборка.ФормаОбучения);
        Результат.Вставить("Наименование", Выборка.Наименование);
    КонецЕсли;
    
    Возврат Результат;
КонецФункции

&НаСервере
Процедура ОбработкаПроведения(Отказ, Режим)
    // регистр ПросроченныеЗадолженности Расход
    Движения.ПросроченныеЗадолженности.Записывать = Истина;
    Движение = Движения.ПросроченныеЗадолженности.Добавить();
    Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
    Движение.Период = Дата;
    Движение.Студент = Студент;
    Движение.Группа = Группа;
    Движение.Семестр = Семестр;
    Движение.КоличествоПросроченныхЗадолженностей = КоличествоВозникшихЗадолженностей;
КонецПроцедуры