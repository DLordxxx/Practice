&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИдентификацияАкадемическихЗадолженностей") Тогда
        
        // Заполняем основные реквизиты из документа-основания
        ЭтотОбъект.Группа = ДанныеЗаполнения.Группа;
        ЭтотОбъект.ЛичныйИндекс = ДанныеЗаполнения.ЛичныйИндекс;
        ЭтотОбъект.НаправлениеПодготовки = ДанныеЗаполнения.НаправлениеПодготовки;
        ЭтотОбъект.Студент = ДанныеЗаполнения.Студент;
        ЭтотОбъект.Факультет = ДанныеЗаполнения.Факультет;
        ЭтотОбъект.ФормаОбучения = ДанныеЗаполнения.ФормаОбучения;
        ЭтотОбъект.Основание = ДанныеЗаполнения.Ссылка;
        ЭтотОбъект.Курс = ПолучитьКурсСтудента(ДанныеЗаполнения.Студент);
        
        // Получаем объект документа-основания
        ДокументОснование = ДанныеЗаполнения.ПолучитьОбъект();
        
        // Проверяем наличие дисциплин в основании
        Если ДокументОснование.Характеристика.Количество() = 0 Тогда
            ВызватьИсключение "В документе-основании нет дисциплин для пересдачи!";
        КонецЕсли;
        
        // Создаем структуру для хранения информации о дисциплинах
        ДисциплиныИнфо = Новый Соответствие;
        Для Каждого СтрокаХарактеристики Из ДокументОснование.Характеристика Цикл
            ДисциплиныИнфо.Вставить(СтрокаХарактеристики.Дисциплины, СтрокаХарактеристики.ФормаКонтроля);
        КонецЦикла;
        
        // Ищем уже созданные направления на пересдачу по этим дисциплинам
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
            |    НаправлениеНаПересдачу.Ссылка КАК Ссылка,
            |    НаправлениеНаПересдачу.Дисциплина КАК Дисциплина,
            |    НаправлениеНаПересдачу.ФормаКонтроля КАК ФормаКонтроля
            |ИЗ
            |    Документ.НаправлениеНаПересдачу КАК НаправлениеНаПересдачу
            |ГДЕ
            |    НаправлениеНаПересдачу.Основание = &Основание
            |    И НаправлениеНаПересдачу.Проведен";
        
        Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения.Ссылка);
        Результат = Запрос.Выполнить();
        
        // Удаляем из списка уже пересданные дисциплины
        Выборка = Результат.Выбрать();
        Пока Выборка.Следующий() Цикл
            Если ДисциплиныИнфо.Получить(Выборка.Дисциплина) <> Неопределено Тогда
                ДисциплиныИнфо.Удалить(Выборка.Дисциплина);
            КонецЕсли;
        КонецЦикла;
        
        // Проверяем остались ли дисциплины для пересдачи
        Если ДисциплиныИнфо.Количество() = 0 Тогда
            ВызватьИсключение "По всем дисциплинам из документа-основания были созданы «Направление на пересдачу»!";
        Иначе
            // Формируем сообщение о доступных для пересдачи дисциплинах
            Сообщение = "Доступные для пересдачи дисциплины:";
            Для Каждого КлючЗначение Из ДисциплиныИнфо Цикл
                Дисциплина = КлючЗначение.Ключ;
                ФормаКонтроля = КлючЗначение.Значение;
                Сообщение = Сообщение + Символы.ПС + "- " + Дисциплина + 
                            " (" + ФормаКонтроля + ")";
            КонецЦикла;
            
            // Выводим информационное сообщение
            Сообщить(Сообщение);
        КонецЕсли;
        
        // Заполняем первую доступную дисциплину
        Если ДокументОснование.Характеристика.Количество() > 0 Тогда
            ПерваяДисциплина = Неопределено;
            ПерваяФормаКонтроля = Неопределено;
            
            // Находим первую не пересданную дисциплину
            Для Каждого СтрокаХарактеристики Из ДокументОснование.Характеристика Цикл
                Если ДисциплиныИнфо.Получить(СтрокаХарактеристики.Дисциплины) <> Неопределено Тогда
                    ПерваяДисциплина = СтрокаХарактеристики.Дисциплины;
                    ПерваяФормаКонтроля = СтрокаХарактеристики.ФормаКонтроля;
                    Прервать;
                КонецЕсли;
            КонецЦикла;
            
            Если ПерваяДисциплина <> Неопределено Тогда
                ЭтотОбъект.Дисциплина = ПерваяДисциплина;
                ЭтотОбъект.ФормаКонтроля = ПерваяФормаКонтроля;
                
                // Заполняем табличную часть, если она существует
                Если Метаданные.Документы[ЭтотОбъект.Метаданные().Имя].ТабличныеЧасти.Найти("Характеристика") <> Неопределено Тогда
                    ЭтотОбъект.Характеристика.Очистить();
                    НоваяСтрока = ЭтотОбъект.Характеристика.Добавить();
                    НоваяСтрока.Дисциплины = ПерваяДисциплина;
                    НоваяСтрока.ФормаКонтроля = ПерваяФормаКонтроля;
                КонецЕсли;
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКурсСтудента(СсылкаНаСтудента) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Курс КАК Курс
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Курс;
    КонецЕсли;
    
    Возврат Неопределено;
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ДатыПересдач
	Движения.ДатыПересдач.Записывать = Истина;
	Движение = Движения.ДатыПересдач.Добавить();
	Движение.Преподаватель = Преподаватель;
	Движение.Аудитория = Аудитория;
	Движение.Дисциплина = Дисциплина;
	Движение.ДатаВыдачи = Дата;
	Движение.ДатаПересдачи = ДатаПроведения;
	Движение.ВремяПересдачи = Время;
	
КонецПроцедуры



