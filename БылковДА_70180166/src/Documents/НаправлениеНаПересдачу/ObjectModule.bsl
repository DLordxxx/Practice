
Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДатыПересдач.Записывать = Истина;
	Движение = Движения.ДатыПересдач.Добавить();
	Движение.Преподаватель = Преподаватель;
	Движение.Аудитория = Аудитория;
	Движение.Дисциплина = Дисциплина;
	Движение.ДатаВыдачи = Дата;
	Движение.ДатаПересдачи = ДатаПроведения;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИдентификацияАкадемическихЗадолженностей") Тогда
			Группа = ДанныеЗаполнения.Группа;
		ЛичныйИндекс = ДанныеЗаполнения.ЛичныйИндекс;
		Студент = ДанныеЗаполнения.Студент;
		Факультет = ДанныеЗаполнения.Факультет;
		ФормаОбучения = ДанныеЗаполнения.ФормаОбучения;
	КонецЕсли;
	КонецПроцедуры



Процедура СоздатьПриказИзНаправлений() Экспорт
       НовыйПриказ = Документы.ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.СоздатьДокумент();
       ВыборкаНаправлений = Документы.НаправлениеНаПересдачу.Выбрать();
    
    Пока ВыборкаНаправлений.Следующий() Цикл
        Направление = ВыборкаНаправлений.ПолучитьОбъект();         
        НовыйЭлементПриказ = НовыйПриказ.Элементы.Добавить(); 
        НовыйЭлементПриказ.Поле1 = Направление.Поле1; 
		НовыйЭлементПриказ.Поле2 = Направление.Поле2; 
		
	КонецЦикла;

	
	НовыйПриказ.Записать();
    
    Сообщить("Приказ успешно создан на основании направлений на пересдачу.");
КонецПроцедуры
