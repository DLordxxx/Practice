&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИдентификацияАкадемическихЗадолженностей") Тогда
        // Заполнение шапки документа
        ЭтотОбъект.Группа = ДанныеЗаполнения.Группа;
        ЭтотОбъект.ЛичныйИндекс = ДанныеЗаполнения.ЛичныйИндекс;
        ЭтотОбъект.НаправленияПодготовки = ДанныеЗаполнения.НаправленияПодготовки;
        ЭтотОбъект.Студент = ДанныеЗаполнения.Студент;
        ЭтотОбъект.Факультет = ДанныеЗаполнения.Факультет;
        ЭтотОбъект.ФормаОбучения = ДанныеЗаполнения.ФормаОбучения;
        ЭтотОбъект.Основание = ДанныеЗаполнения.Ссылка;
        ЭтотОбъект.Курс = ПолучитьКурсСтудента(ДанныеЗаполнения.Студент);
        
        // Получаем объект документа-основания
        ДокументОснование = ДанныеЗаполнения.ПолучитьОбъект();
                
        // Проверяем наличие записей в табличной части документа-основания
        Если ДокументОснование.Характеристика.Количество() > 0 Тогда
            // Для ввода на основании (не множественное создание) берем первую строку
            ПерваяСтрока = ДокументОснование.Характеристика[0];
            ЭтотОбъект.Дисциплина = ПерваяСтрока.Дисциплины;
            ЭтотОбъект.НаименованиеКонтроля = ПерваяСтрока.НаименованиеКонтроля;
            
            // Проверяем наличие табличной части Характеристика в текущем документе
            Если Метаданные.Документы[ЭтотОбъект.Метаданные().Имя].ТабличныеЧасти.Найти("Характеристика") <> Неопределено Тогда
                ЭтотОбъект.Характеристика.Очистить();
                НоваяСтрока = ЭтотОбъект.Характеристика.Добавить();
                НоваяСтрока.Дисциплины = ПерваяСтрока.Дисциплины;
                НоваяСтрока.НаименованиеКонтроля = ПерваяСтрока.НаименованиеКонтроля;
            КонецЕсли;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры   


&НаСервере
Функция ПолучитьКурсСтудента(СсылкаНаСтудента) Экспорт
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.Курс КАК Курс
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Курс;
    КонецЕсли;
    
    Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ОткрытьСозданныеНаправления(МассивСсылок) Экспорт
    // Открываем все документы в одном списке с отбором
    ПараметрыОтбора = Новый Структура;
    ПараметрыОтбора.Вставить("Ссылка", МассивСсылок);
    ОткрытьФорму("Список.НаправлениеНаПересдачу", ПараметрыОтбора);
    
    Сообщить("Создано " + МассивСсылок.Количество() + " документов НаправлениеНаПересдачу.");
КонецПроцедуры

&НаСервере
Функция СоздатьПриказИзНаправлений() Экспорт
    НовыйПриказ = Документы.ПриказОНазначенииКомиссииПоЛиквидацииЗадолженностей.СоздатьДокумент();
    
    // Заполняем общие реквизиты приказа
    НовыйПриказ.Дата = ТекущаяДата();
    НовыйПриказ.Номер = "";
    НовыйПриказ.Курс = ЭтотОбъект.Курс;
    
    // Получаем все направления для данного студента
    ВыборкаНаправлений = Документы.НаправлениеНаПересдачу.ВыбратьПоРеквизиту("Студент", ЭтотОбъект.Студент);
    
    Пока ВыборкаНаправлений.Следующий() Цикл
        Направление = ВыборкаНаправлений.ПолучитьОбъект();
        
        // Добавляем дисциплину в приказ
        НовыйЭлементПриказ = НовыйПриказ.Элементы.Добавить();
        НовыйЭлементПриказ.Дисциплина = Направление.Дисциплина;
        НовыйЭлементПриказ.НаименованиеКонтроля = Направление.НаименованиеКонтроля;
        НовыйЭлементПриказ.Студент = Направление.Студент;
        НовыйЭлементПриказ.Группа = Направление.Группа;
        НовыйЭлементПриказ.Курс = Направление.Курс;
        НовыйЭлементПриказ.ДатаПересдачи = Направление.ДатаПроведения;
    КонецЦикла;

    НовыйПриказ.Записать();
    
    // Возвращаем ссылку для открытия на клиенте
    Возврат НовыйПриказ.Ссылка;
КонецФункции

&НаКлиенте
Процедура СоздатьНаправленияНаКлиенте(Команда) Экспорт
    Если Модифицированность Тогда
        Вопрос = Новый ОписаниеОповещения("ПослеВопросаОЗаписи", ЭтотОбъект);
        ПоказатьВопрос(Вопрос, "Документ был изменен. Сохранить изменения перед созданием направлений?", РежимДиалогаВопрос.ДаНетОтмена);
    Иначе
        СоздатьИОткрытьНаправления();
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСозданныеНаправления(МассивСсылок) Экспорт
    Если МассивСсылок.Количество() > 0 Тогда
        ПараметрыОтбора = Новый Структура;
        ПараметрыОтбора.Вставить("Ссылка", МассивСсылок);
        ОткрытьФорму("Список.НаправлениеНаПересдачу", ПараметрыОтбора);
        Сообщить("Создано " + МассивСсылок.Количество() + " документов НаправлениеНаПересдачу.");
    КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Движения.ДатыПересдач.Записывать = Истина;
	Движение = Движения.ДатыПересдач.Добавить();
	Движение.Преподаватель = Преподаватель;
	Движение.Аудитория = Аудитория;
	Движение.Дисциплина = Дисциплина;
	Движение.ДатаВыдачи = Дата;
	Движение.ДатаПересдачи = ДатаПроведения;

КонецПроцедуры



