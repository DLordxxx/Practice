&НаСервере
Процедура ЗаполнитьСлучайнымиДаннымиНаСервере()
    
    // Инициализируем генератор случайных чисел
    ГСЧ = Новый ГенераторСлучайныхЧисел();
    
        НаименованиеКонтроля = Объект.НаименованиеКонтроля;
        
        // Запоминаем текущую оценку для сравнения
        ТекущаяОценка = Объект.Оценка;
        НоваяОценка = Неопределено;
        
        // Устанавливаем оценку в зависимости от формы контроля
        Если НаименованиеКонтроля = Перечисления.НаименованиеКонтроля.Зачет Тогда
            // Для зачетов - только зачтено/незачтено
            Если ГСЧ.СлучайноеЧисло(1, 100) > 50 Тогда
                НоваяОценка = Перечисления.Оценка.Зачет;
            Иначе
                НоваяОценка = Перечисления.Оценка.Незачет;
            КонецЕсли;
        Иначе
            // Для других форм контроля - стандартные оценки
            СлучайнаяОценка = ГСЧ.СлучайноеЧисло(1, 4);
            Если СлучайнаяОценка = 1 Тогда
                НоваяОценка = Перечисления.Оценка.Неудовлетворительно;
            ИначеЕсли СлучайнаяОценка = 2 Тогда
                НоваяОценка = Перечисления.Оценка.Удовлетворительно;
            ИначеЕсли СлучайнаяОценка = 3 Тогда
                НоваяОценка = Перечисления.Оценка.Хорошо;
            Иначе
                НоваяОценка = Перечисления.Оценка.Отлично;
            КонецЕсли;
        КонецЕсли;
        
        // Если оценка определена, записываем новое значение
        Если НоваяОценка <> Неопределено Тогда
            // Устанавливаем новую оценку
            Объект.Оценка = НоваяОценка;
            
            // Определяем и устанавливаем статус академической задолженности
            Если НоваяОценка = Перечисления.Оценка.Незачет 
               ИЛИ НоваяОценка = Перечисления.Оценка.Неудовлетворительно Тогда
               		Объект.СтатусАкадемическойЗадолженности = 
                    Перечисления.НаименованиеСтатуса.Активная;
            Иначе
                Объект.СтатусАкадемическойЗадолженности = 
                    Перечисления.НаименованиеСтатуса.Закрытая;
            КонецЕсли;
            
            // Обновляем форму, чтобы изменения отобразились
            ЭтотОбъект.Записать();
        КонецЕсли;
        
       
КонецПроцедуры  
&НаКлиенте
Процедура ЗаполнитьСлучайнымиДанными(Команда)
    ЗаполнитьСлучайнымиДаннымиНаСервере();
КонецПроцедуры       

&НаСервере
Процедура ОценкаПриИзменении(Элемент)
    ОбновитьСтатусЗадолженности();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусЗадолженности()
    
    ТекущаяОценка = Объект.Оценка;
    ТекущийСтатус = Объект.СтатусАкадемическойЗадолженности;
    
    // Определяем новый статус на основе оценки
    Если ТекущаяОценка = Перечисления.Оценка.Незачет 
        ИЛИ ТекущаяОценка = Перечисления.Оценка.Неудовлетворительно Тогда
        НовыйСтатус = Перечисления.СтатусыАкадемическойЗадолженности.Активная;
    ИначеЕсли ТекущаяОценка = Перечисления.Оценка.Зачет
        ИЛИ ТекущаяОценка = Перечисления.Оценка.Удовлетворительно
        ИЛИ ТекущаяОценка = Перечисления.Оценка.Хорошо
        ИЛИ ТекущаяОценка = Перечисления.Оценка.Отлично Тогда
        НовыйСтатус = Перечисления.СтатусыАкадемическойЗадолженности.Закрытая;
    Иначе
        Возврат;
    КонецЕсли;
    
    // Если статус изменился - обновляем
    Если ТекущийСтатус <> НовыйСтатус Тогда
        ЭтотОбъект.СтатусАкадемическойЗадолженности = НовыйСтатус;
    КонецЕсли;
        
КонецПроцедуры