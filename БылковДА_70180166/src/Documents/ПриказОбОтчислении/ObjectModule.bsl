
&НаСервере
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
    
    Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПротоколЗаседанияКомиссии") Тогда
        Группа = ДанныеЗаполнения.Группа;
        КоличествоПросроченныхЗадолженностей = ДанныеЗаполнения.КоличествоВозникшихЗадолженностей;
        Семестр = ДанныеЗаполнения.Семестр;
        Основание = ДанныеЗаполнения.Ссылка;
        Студент = ДанныеЗаполнения.Студент;
        
        // Получаем данные студента из справочника
        ДанныеСтудента = ПолучитьДанныеСтудента(Студент);
        
        // Заполняем НаправлениеПодготовки данными из справочника Студенты
        Если ДанныеСтудента.Свойство("НаправленияПодготовки") Тогда
            НаправленияПодготовки = ДанныеСтудента.НаправленияПодготовки;
        КонецЕсли;
    КонецЕсли;
    
    СтандартнаяОбработка = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеСтудента(СсылкаНаСтудента) Экспорт
    Результат = Новый Структура;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |    Студенты.НаправленияПодготовки КАК НаправленияПодготовки,
    |    Студенты.Факультет КАК Факультет,
    |    Студенты.Семестр КАК Семестр,
    |    Студенты.ФормаОбучения КАК ФормаОбучения,
    |    Студенты.Наименование КАК Наименование
    |ИЗ
    |    Справочник.Студенты КАК Студенты
    |ГДЕ
    |    Студенты.Ссылка = &СсылкаНаСтудента";
    
    Запрос.УстановитьПараметр("СсылкаНаСтудента", СсылкаНаСтудента);
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Результат.Вставить("НаправленияПодготовки", Выборка.НаправленияПодготовки);
        Результат.Вставить("Факультет", Выборка.Факультет);
        Результат.Вставить("Семестр", Выборка.Семестр);
        Результат.Вставить("ФормаОбучения", Выборка.ФормаОбучения);
        Результат.Вставить("Наименование", Выборка.Наименование);
    КонецЕсли;
    
    Возврат Результат;
КонецФункции

&НаСервере
Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ПросроченныеЗадолженности Расход
	Движения.ПросроченныеЗадолженности.Записывать = Истина;
	Движение = Движения.ПросроченныеЗадолженности.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Студент = Студент;
	Движение.Группа = Группа;
	Движение.Семестр = Семестр;
	Движение.КоличествоПросроченныхЗадолженностей = КоличествоПросроченныхЗадолженностей;

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры